<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lgy.projectfinal.dao.QnADao">

    <sql id="criteria">
        <trim prefix="AND (" suffix=")" prefixOverrides="OR">
            <foreach collection="typeArr" item="type">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            qna_title like '%'||#{keyword}||'%' 
                        </when>
                        <when test="type == 'C'.toString()">
                            qna_content like '%'||#{keyword}||'%' 
                        </when>
                        <when test="type == 'W'.toString()">
                            cust_id like '%'||#{keyword}||'%' 
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    </sql>
    

    <select id="qna_listWithPaging" resultType="com.lgy.projectfinal.dto.QnADto">
     <![CDATA[ 
		SELECT qna_key, cust_id, ad_id, qna_title, qna_content, qna_date, qna_hit, qna_ref, qna_step, qna_level
		from (
		    SELECT rownum rn, qna_key, cust_id, ad_id, qna_title, qna_content, qna_date, qna_hit, qna_ref, qna_step, qna_level
		    from (
			    SELECT rownum rn, qna_key, cust_id, ad_id, qna_title, qna_content, qna_date, qna_hit, qna_ref, qna_step, qna_level
			    FROM qna
			    order by qna_ref desc, qna_step asc
			   )
			    where rownum <= (#{pageNum} * #{amount})
    ]]>            
                <if test="keyword != null">
                     <include refid="criteria"></include> 
                </if>
    
    <![CDATA[
                )
        where rn > (#{pageNum} -1) * #{amount}
        order by qna_ref desc, qna_step asc
    ]]>
    </select>
    
	<insert id="qna_write" parameterType="hashmap">
	    <selectKey keyProperty="qna_key" resultType="int" order="BEFORE">
	        SELECT qna_SEQ.NEXTVAL FROM dual
	    </selectKey>
	    INSERT INTO qna (qna_key, qna_ref, qna_title, cust_id, qna_img, qna_imgpath, qna_content, prod_name) VALUES
	                    (#{qna_key}, #{qna_key}, #{qna_title}, #{cust_id}, #{saveFileNames}, #{saveFilePaths}, #{qna_content}, #{prod_name, jdbcType=VARCHAR})
<!-- 	                    (#{qna_key}, #{qna_key}, #{qna_title}, #{cust_id}, #{saveFileNames}, #{saveFilePaths}, #{qna_content}, 'shirt') -->
	</insert>

    <select id="qna_contentView" parameterType="hashmap" resultType="com.lgy.projectfinal.dto.QnADto">
         SELECT qna_key, qna_ref, qna_step, qna_level, qna_title, cust_id, ad_id, qna_img, qna_imgpath, qna_hit, qna_date, qna_content, prod_name
		    FROM qna
		    WHERE qna_key = #{qna_key}
    </select>

    <select id="qna_getImagePath" resultType="String" >
        SELECT qna_imgpath FROM qna WHERE qna_key = #{qna_key}
    </select>
    
    <update id="qna_modify" parameterType="hashmap">
   	 	update qna set qna_title = #{qna_title}, qna_content = #{qna_content}
   	 		<if test="saveFileNames != null">
	            , qna_img = #{saveFileNames, jdbcType=VARCHAR}
	        </if>
	        <if test="saveFilePaths != null">
	            , qna_imgpath = #{saveFilePaths, jdbcType=VARCHAR}
	        </if>
   	 	 where qna_key = #{qna_key}
    </update>
    
    <delete id="qna_delete" parameterType="hashmap">
   	 	delete from qna where qna_key=#{qna_key}
    </delete>
    
    <select id="qna_getTotalCount" resultType="int">
		SELECT count(*) FROM qna
		<if test="keyword != null">
            where qna_key > 0 <include refid="criteria"></include>
        </if>
    </select>
    
    <update id="qna_upHit" parameterType="hashmap">
		update qna set qna_hit = qna_hit+1 where qna_key=#{qna_key}
    </update>

<!-- 같은 REF(최상위부모값)을 가진 것 중 현재 답글을 달 게시물의 순번보다 큰것을 +1로 하여 하나씩 밀리게한다 -->
	<!-- 등록 전 요소 업데이트 -->
	<update id="qna_updateStep" parameterType="hashmap">
		UPDATE qna SET qna_step = qna_step+1 WHERE qna_ref = #{qna_ref} AND qna_step > #{qna_step}
	</update>
	
		<!-- 답글의 입력 -->
	<insert id="qna_reply" parameterType="hashmap">
		INSERT INTO qna(
				qna_key, qna_ref, qna_step, qna_level, ad_id, qna_title, qna_content, qna_img, qna_imgpath, prod_name) 
		VALUES (
				qna_SEQ.NEXTVAL, #{qna_ref}, #{qna_step}+1, #{qna_level}+1, #{ad_id}, #{qna_title}, #{qna_content}, #{saveFileNames, jdbcType=VARCHAR}, #{saveFilePaths, jdbcType=VARCHAR}, #{prod_name, jdbcType=VARCHAR}
				)
	</insert>
	
	<update id="qna_deleteFile" parameterType="hashmap">
   		update qna set qna_img = #{saveFileNames, jdbcType=VARCHAR}
	        		 , qna_imgPath = #{saveFilePaths, jdbcType=VARCHAR}
   				where qna_key=#{qna_key}
    </update>
</mapper>
